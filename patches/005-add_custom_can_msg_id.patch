diff --git a/openblt/Target/Source/ARMCM3_STM32F1/can.c b/openblt/Target/Source/ARMCM3_STM32F1/can.c
index 4509a89f..fdaea2f1 100644
--- a/openblt/Target/Source/ARMCM3_STM32F1/can.c
+++ b/openblt/Target/Source/ARMCM3_STM32F1/can.c
@@ -185,6 +185,11 @@ static const tCanBusTiming canTiming[] =
   { 16, 8 }           /*  25 |  16   |   8   | 68% */
 };
 
+/** \brief CAN transmit message id. */
+static blt_int32u g_txMsgId;
+/** \brief CAN transmit message id. */
+static blt_int32u g_rxMsgId;
+
 
 /************************************************************************************//**
 ** \brief     Search algorithm to match the desired baudrate to a possible bus
@@ -237,7 +242,7 @@ void CanInit(void)
   blt_int8u  tseg1 = 0, tseg2 = 0;
   blt_bool   result;
   blt_int32u timeout;
-  blt_int32u rxMsgId = BOOT_COM_CAN_RX_MSG_ID;
+  blt_int32u rxMsgId = g_rxMsgId;
   blt_int32u rxFilterId, rxFilterMask;
 
   /* the current implementation supports CAN1. throw an assertion error in case a
@@ -302,7 +307,7 @@ void CanInit(void)
   }
 
   /* determine the reception filter mask and id values such that it only leaves one
-   * CAN identifier through (BOOT_COM_CAN_RX_MSG_ID).
+   * CAN identifier through (g_rxMsgId).
    */
   if ((rxMsgId & 0x80000000) == 0)
   {
@@ -352,7 +357,7 @@ void CanInit(void)
 ****************************************************************************************/
 void CanTransmitPacket(blt_int8u *data, blt_int8u len)
 {
-  blt_int32u txMsgId = BOOT_COM_CAN_TX_MSG_ID;
+  blt_int32u txMsgId = g_txMsgId;
   blt_int32u timeout;
 
   /* make sure that transmit mailbox 0 is available */
@@ -434,7 +439,7 @@ blt_bool CanReceivePacket(blt_int8u *data, blt_int8u *len)
       rxMsgId |= 0x80000000;
     }
     /* is this the packet identifier */
-    if (rxMsgId == BOOT_COM_CAN_RX_MSG_ID)
+    if (rxMsgId == g_rxMsgId)
     {
       result = BLT_TRUE;
       *len = ((blt_int8u)(CANx->sFIFOMailBox[0].RDTR)) & 0x0fu;
@@ -453,6 +459,30 @@ blt_bool CanReceivePacket(blt_int8u *data, blt_int8u *len)
   }
   return result;
 } /*** end of CanReceivePacket ***/
+
+
+/************************************************************************************//**
+** \brief     Set CAN transmit message id.
+** \param     id Message id to be set.
+** \return    none.
+**
+****************************************************************************************/
+void CanSetTxMsgId(blt_int32u id)
+{
+  g_txMsgId = id;
+} /*** end of CanSetTxMsgId ***/
+
+
+/************************************************************************************//**
+** \brief     Set CAN receive message id.
+** \param     id Message id to be set.
+** \return    none.
+**
+****************************************************************************************/
+void CanSetRxMsgId(blt_int32u id)
+{
+  g_rxMsgId = id;
+} /*** end of CanSetTxMsgId ***/
 #endif /* BOOT_COM_CAN_ENABLE > 0 */
 
 
diff --git a/openblt/Target/Source/can.h b/openblt/Target/Source/can.h
index d0920eed..72550c17 100644
--- a/openblt/Target/Source/can.h
+++ b/openblt/Target/Source/can.h
@@ -35,6 +35,8 @@
 void     CanInit(void);
 void     CanTransmitPacket(blt_int8u *data, blt_int8u len);
 blt_bool CanReceivePacket(blt_int8u *data, blt_int8u *len);
+void     CanSetTxMsgId(blt_int32u id);
+void     CanSetRxMsgId(blt_int32u id);
 #endif /* BOOT_COM_CAN_ENABLE > 0 */
 
 
diff --git a/openblt/Target/Source/xcp.c b/Target/Source/xcp.c
index 0cf65995..61dc5072 100644
--- a/openblt/Target/Source/xcp.c
+++ b/openblt/Target/Source/xcp.c
@@ -78,6 +78,7 @@ static void XcpCmdSetMta(blt_int8u *data);
 static void XcpCmdUpload(blt_int8u *data);
 static void XcpCmdShortUpload(blt_int8u *data);
 static void XcpCmdBuildCheckSum(blt_int8u *data);
+static void XcpCmdSetTxId(blt_int8u *data);
 #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 static void XcpCmdGetSeed(blt_int8u *data);
 static void XcpCmdUnlock(blt_int8u *data);
@@ -99,6 +99,7 @@ static void XcpCmdProgramReset(blt_int8u *data);
 static void XcpCmdProgramPrepare(blt_int8u *data);
 #endif
 
+extern void CanSetTxMsgId(blt_int32u id);
 
 /****************************************************************************************
 * Hook functions
@@ -237,6 +238,9 @@ void XcpPacketReceived(blt_int8u *data, blt_int8u len)
       case XCP_CMD_BUILD_CHECKSUM:
         XcpCmdBuildCheckSum(data);
         break;
+      case XCP_CMD_SET_TX_ID:
+        XcpCmdSetTxId(data);
+        break;
       case XCP_CMD_GET_ID:
         XcpCmdGetId(data);
         break;
@@ -911,6 +915,24 @@ static void XcpCmdBuildCheckSum(blt_int8u *data)
   xcpInfo.ctoLen = 8;
 } /*** end of XcpCmdBuildCheckSum ***/
 
+/************************************************************************************//**
+** \brief     XCP command processor function which handles the SET TX ID command as
+**            defined by the protocol.
+** \param     data Pointer to a byte buffer with the packet data.
+** \return    none
+**
+****************************************************************************************/
+static void XcpCmdSetTxId(blt_int8u *data)
+{
+  /* set packet id to command response packet */
+  xcpInfo.ctoData[0] = XCP_PID_RES;
+
+  /* update transmit id */
+  CanSetTxMsgId(*(blt_int32u *)&data[4]);
+
+  /* set packet length */
+  xcpInfo.ctoLen = 1;
+} /*** end of XcpCmdSetTxId ***/
 
 #if (XCP_SEED_KEY_PROTECTION_EN == 1)
 /************************************************************************************//**
diff --git a/openblt/Target/Source/xcp.h b/Target/Source/xcp.h
index c56cded5..af10c81b 100644
--- a/openblt/Target/Source/xcp.h
+++ b/openblt/Target/Source/xcp.h
@@ -193,6 +193,8 @@
 #define XCP_CMD_PROGRAM_RESET       (0xcf)
 /** \brief PROGRAM_PREPARE command code. */
 #define XCP_CMD_PROGRAM_PREPARE     (0xcc)
+/** \brief SET TX ID command code. */
+#define XCP_CMD_SET_TX_ID           (0xcd)
 /** \brief PROGRAM_MAX command code. */
 #define XCP_CMD_PROGRAM_MAX         (0xc9)
 