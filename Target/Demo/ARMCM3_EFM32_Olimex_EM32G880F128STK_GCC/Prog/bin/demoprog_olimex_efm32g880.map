
bin/demoprog_olimex_efm32g880.elf:     file format elf32-littlearm
bin/demoprog_olimex_efm32g880.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00002000

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**16
         filesz 0x00002fcc memsz 0x00002fcc flags r-x
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x00002fcc align 2**16
         filesz 0x00000008 memsz 0x00000470 flags rw-
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fcc  00002000  00002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  20000000  00002fcc  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000468  20000008  00002fd4  00010008  2**2
                  ALLOC
  3 .ARM.attributes 00000029  00000000  00000000  00010008  2**0
                  CONTENTS, READONLY
  4 .comment      0000006e  00000000  00000000  00010031  2**0
                  CONTENTS, READONLY
  5 .debug_info   00005b43  00000000  00000000  0001009f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000018c1  00000000  00000000  00015be2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_loc    000024e4  00000000  00000000  000174a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_aranges 00000448  00000000  00000000  00019987  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000378  00000000  00000000  00019dcf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_macro  0001457d  00000000  00000000  0001a147  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000031d8  00000000  00000000  0002e6c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00076f46  00000000  00000000  0003189c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000088c  00000000  00000000  000a87e4  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00002000 l    d  .text	00000000 .text
20000000 l    d  .data	00000000 .data
20000008 l    d  .bss	00000000 .bss
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 boot.c
000020bc l     F .text	00000098 BootComUartInit
00002154 l     F .text	00000024 UartReceiveByte
000021a0 l     F .text	00000094 BootComUartCheckActivationRequest
20000008 l     O .bss	00000004 xcpCtoRxStartTime.5582
2000000c l     O .bss	00000001 xcpCtoRxLength.5580
20000010 l     O .bss	00000041 xcpCtoReqPacket.5579
20000051 l     O .bss	00000001 xcpCtoRxInProgress.5581
00000000 l    df *ABS*	00000000 main.c
00002240 l     F .text	000001ec Init
00000000 l    df *ABS*	00000000 cstart.c
00002462 l     F .text	00000000 zero_loop
00000000 l    df *ABS*	00000000 led.c
20000054 l     O .bss	00000004 timer_counter_last.5564
20000058 l     O .bss	00000001 led_toggle_state.5563
00000000 l    df *ABS*	00000000 timer.c
2000005c l     O .bss	00000004 millisecond_counter
00000000 l    df *ABS*	00000000 efm32_leuart.c
00000000 l    df *ABS*	00000000 efm32_system.c
00000000 l    df *ABS*	00000000 efm32_cmu.c
0000264c l     F .text	00000030 CMU_FlashWaitStateMax
0000267c l     F .text	0000000c CMU_DivToLog2
00002688 l     F .text	00000060 CMU_FlashWaitStateControl
000026e8 l     F .text	00000008 CMU_AUXClkGet
000026f0 l     F .text	00000038 CMU_LFClkGet
00002988 l     F .text	00000024 CMU_DBGClkGet
00000000 l    df *ABS*	00000000 efm32_gpio.c
00000000 l    df *ABS*	00000000 efm32_emu.c
20000060 l     O .bss	00000002 cmuStatus
00000000 l    df *ABS*	00000000 lcdcontroller.c
00002cc4 l     F .text	0000005e LCD_enableSegment
00002d24 l     F .text	0000006e LCD_disableSegment
00000000 l    df *ABS*	00000000 system_efm32.c
20000000 l     O .data	00000004 SystemLFXOClock
20000004 l     O .data	00000004 SystemHFXOClock
00000000 l    df *ABS*	00000000 /opt/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7-m/crti.o
00000000 l    df *ABS*	00000000 /opt/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/armv7-m/crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00002fc8 l     O .text	00000000 __EH_FRAME_BEGIN__
00000000 l    df *ABS*	00000000 crtstuff.c
00002fc8 l     O .text	00000000 __FRAME_END__
00000000 l    df *ABS*	00000000 
00000000 l       *UND*	00000000 __bss_start__
00000000 l       *UND*	00000000 __libc_fini_array
00000000 l       *UND*	00000000 __sf_fake_stderr
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 __bss_end__
00000000 l       *UND*	00000000 __call_exitprocs
00000000 l       *UND*	00000000 software_init_hook
00000000 l       *UND*	00000000 __sf_fake_stdin
00000000 l       *UND*	00000000 __init_array_end
00000000 l       *UND*	00000000 hardware_init_hook
00000000 l       *UND*	00000000 atexit
00000000 l       *UND*	00000000 __preinit_array_end
00000000 l       *UND*	00000000 __stack
00000000 l       *UND*	00000000 __sf_fake_stdout
00000000 l       *UND*	00000000 __init_array_start
00000000 l       *UND*	00000000 _exit
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __preinit_array_start
00000000 l       *UND*	00000000 __register_frame_info
00002bc8 g     F .text	00000020 GPIO_DriveModeSet
00002cb0 g     F .text	00000014 EMU_UpdateOscConfig
00002440 g     F .text	00000040 reset_handler
000029ac g     F .text	00000118 CMU_ClockFreqGet
00002598 g     F .text	0000001e LEUART_Enable
000025b8 g     F .text	00000014 LEUART_FreezeEnable
20000064 g     O .bss	00000004 frameCounter
00002ac4 g     F .text	00000050 CMU_OscillatorEnable
00002dcc g     F .text	00000072 LCD_Symbol
00002fcc g       .text	00000000 _etext
0000253c g     F .text	00000010 TimerISRHandler
000028f4 g     F .text	00000094 CMU_ClockSelectGet
20000068 g     O .bss	00000004 SystemCoreClock
00002f94 g     F .text	0000000c SystemLFXOClockGet
00002878 g     F .text	0000007c CMU_ClockEnable
00002db0 g     F .text	0000001a LCD_AllOff
0000261c g     F .text	0000000e LEUART_Rx
00002fa0 g     F .text	00000000 _init
00002180 g     F .text	00000020 BootActivate
20000070 g       .bss	00000000 _ebss
00002d94 g     F .text	0000001c LCD_IRQHandler
00000400 g       *ABS*	00000000 __STACKSIZE__
0000223c g     F .text	00000002 UnusedISR
0000248c g     F .text	00000010 LedInit
000025cc g     F .text	0000004e LEUART_Init
00002b14 g     F .text	000000b4 CMU_ClockSelectSet
20000008 g       .bss	00000000 _bss
00002ecc g     F .text	0000009c SystemHFClockGet
00002e40 g     F .text	0000008c LCD_Init
0000242c g     F .text	00000014 main
000024e8 g     F .text	0000000c TimerSet
00002be8 g     F .text	000000c8 GPIO_PinModeSet
00002178 g     F .text	00000008 BootComInit
00002f88 g     F .text	00000002 SystemInit
00002fac g     F .text	00000000 _fini
00002728 g     F .text	00000150 CMU_ClockDivSet
20000000 g       .data	00000000 _data
0000249c g     F .text	0000004c LedToggle
00002f8c g     F .text	00000006 SystemLFRCOClockGet
0000254c g     F .text	0000004c LEUART_BaudrateSet
0000262c g     F .text	00000020 SYSTEM_ChipRevisionGet
00002f68 g     F .text	00000020 SystemCoreClockGet
20000470 g       .bss	00000000 _estack
20000008 g       .data	00000000 _edata
00002000 g     O .text	000000bc _vectab
00002234 g     F .text	00000008 BootComCheckActivationRequest
20000070 g       .bss	00000000 _stack
00002530 g     F .text	0000000c TimerGet
000024f4 g     F .text	0000003c TimerInit


